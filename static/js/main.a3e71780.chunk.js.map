{"version":3,"sources":["components/Header.tsx","components/SafariLogo.tsx","components/Laptop/index.tsx","components/ProjectList/ListItem.tsx","components/ProjectList/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Container","styled","div","Title","h1","Subtitle","h3","LinkContainer","Link","a","Header","target","href","SafariLogo","Screen","Browser","props","isHidden","BrowserHeader","img","BrowserContent","Video","video","Laptop","projects","curProject","setCurProject","useState","browserHidden","setBrowserHidden","videoSrc","useEffect","setTimeout","src","key","autoPlay","muted","playsInline","loop","type","selected","css","Label","Icon","ListItem","project","onClick","name","style","textDecoration","url","ProjectList","map","index","GlobalStyles","createGlobalStyle","ContentContainer","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3e71780.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 735px) {\n    margin-top: 4vh;\n  }\n`;\n\nconst Title = styled.h1`\n  margin: 3vw 0 0 0;\n  font-size: calc(24px + 3vw);\n  font-weight: 800;\n`;\n\nconst Subtitle = styled.h3`\n  margin: 0;\n  font-size: calc(18px + 1vw);\n  font-weight: 400;\n\n  @media screen and (max-width: 735px) {\n    font-weight: 300;\n  }\n`;\n\nconst LinkContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Link = styled.a`\n  margin: 24px;\n  font-size: 16px;\n  transition: all 0.3s;\n  text-decoration: none;\n  color: dodgerblue;\n  cursor: pointer;\n\n  @media (prefers-color-scheme: dark) {\n    :hover {\n      filter: brightness(1.3);\n    }\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Container>\n      <Title>Tanner Villarete</Title>\n      <Subtitle>Frontend Developer</Subtitle>\n      <LinkContainer>\n        <Link target=\"_blank\" href=\"https://www.github.com/tvillarete\">\n          GitHub\n        </Link>\n        <Link target=\"_blank\" href=\"https://www.linkedin.com/in/tvillarete/\">\n          LinkedIn\n        </Link>\n      </LinkContainer>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 1.4%;\n  left: 13%;\n  height: 5.5%;\n  width: 3.5%;\n  background: url(\"/safari.png\");\n  background-size: cover;\n  animation-name: bounce;\n  animation-timing-function: ease;\n  animation-duration: 2s;\n  transform-origin: bottom;\n\n  @keyframes bounce {\n    0% {\n      transform: scale(1, 1) translateY(0);\n    }\n    10% {\n      transform: scale(1.1, 0.9) translateY(0);\n    }\n    30% {\n      transform: scale(0.9, 1.1) translateY(-10px);\n    }\n    50% {\n      transform: scale(1.05, 0.95) translateY(0);\n    }\n    57% {\n      transform: scale(1, 1) translateY(-7px);\n    }\n    64% {\n      transform: scale(1, 1) translateY(0);\n    }\n    100% {\n      transform: scale(1, 1) translateY(0);\n    }\n  }\n`;\n\nconst SafariLogo = () => {\n  return <Container></Container>;\n};\n\nexport default SafariLogo;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport SafariLogo from \"../SafariLogo\";\nimport { Project } from \"../../App\";\n\nconst Container = styled.div`\n  position: relative;\n  margin: 10vh 0;\n  width: 697px;\n  max-width: 900px;\n  height: 408px;\n  background: url(\"/macbook.png\");\n  background-size: 100% 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n  position: relative;\n  transition: all 0.1s ease;\n  pointer-events: none;\n  user-select: none;\n\n  @media screen and (max-width: 735px) {\n    margin: 5vh 0;\n    width: 375px;\n    height: 217px;\n  }\n`;\n\nconst Screen = styled.div`\n  position: absolute;\n  top: 5%;\n  left: 12%;\n  width: 76%;\n  height: 84%;\n  background: url(\"/desktop.jpg\");\n  background-size: cover;\n  animation: fadeIn 1s;\n\n  @keyframes fadeIn {\n    0% {\n      filter: brightness(0);\n      transform: scale(0.5);\n      opacity: 0;\n    }\n\n    100% {\n      filter: brightness(1);\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n\ninterface BrowserProps {\n  isHidden: boolean;\n}\n\nconst Browser = styled.div<BrowserProps>`\n  display: ${props => props.isHidden && \"none\"};\n  position: relative;\n  top: 10%;\n  margin: 0 auto;\n  height: 70%;\n  width: 80%;\n  background: #2b2e33;\n  background-size: 100% 100%;\n  -webkit-animation: scale 3s;\n  animation: scale 3s;\n  overflow: hidden;\n  border-radius: 2px;\n`;\n\nconst BrowserHeader = styled.img`\n  position: absolute;\n  max-width: 100%;\n`;\n\nconst BrowserContent = styled.div`\n  position: absolute;\n  top: 3.8%;\n  left: 0.3%;\n  right: 0.3%;\n  bottom: 0;\n  background-size: cover;\n`;\n\nconst Video = styled.video`\n  width: 100%;\n`;\n\ninterface Props {\n  projects: Project[];\n  curProject: number;\n  setCurProject: (project: number) => void;\n}\n\nconst Laptop = ({ projects, curProject, setCurProject }: Props) => {\n  const [browserHidden, setBrowserHidden] = useState(true);\n  const videoSrc = projects[curProject].videoSrc;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setBrowserHidden(false);\n    }, 1500);\n  }, []);\n\n  return (\n    <Container>\n      <Screen>\n        <Browser isHidden={browserHidden}>\n          <BrowserHeader src=\"/BrowserHeader.jpg\" />\n          <BrowserContent>\n            <Video key={videoSrc} autoPlay muted playsInline loop>\n              <source src={videoSrc} type=\"video/mp4\" />\n            </Video>\n          </BrowserContent>\n        </Browser>\n        <SafariLogo />\n      </Screen>\n    </Container>\n  );\n};\n\nexport default Laptop;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Project } from \"../../App\";\n\ninterface ContainerProps {\n  selected: boolean;\n}\n\nconst LinkContainer = styled.a`\n  display: none;\n`;\n\nconst Container = styled.div<ContainerProps>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px 8px 16px 16px;\n  border-bottom: 1px solid lightgray;\n  border-left: 3px solid transparent;\n  cursor: pointer;\n  transition: background 0.3s;\n\n  ${props =>\n    props.selected &&\n    css`\n      border-left: 3px solid #0070c9;\n\n      ${LinkContainer} {\n        display: flex;\n      }\n    `};\n\n  @media (prefers-color-scheme: dark) {\n    border-bottom: 1px solid #404040;\n    background: ${props => props.selected && \"#ffffff1f\"};\n\n    :hover {\n      background: ${props => !props.selected && \"#ffffff0d\"};\n    }\n  }\n`;\n\nconst Label = styled.h3`\n  margin: 0;\n  font-weight: 500;\n`;\n\nconst Link = styled.h3`\n  margin: 0 4px;\n  font-size: 16px;\n  font-weight: 300;\n  transition: all 0.3s;\n  text-decoration: none;\n  color: #0070c9;\n  cursor: pointer;\n\n  @media (prefers-color-scheme: dark) {\n    :hover {\n      filter: brightness(1.3);\n    }\n  }\n`;\n\nconst Icon = styled.img`\n  max-width: 16px;\n`;\n\ninterface Props {\n  project: Project;\n  onClick: () => void;\n  selected: boolean;\n}\n\nconst ListItem = ({ project, selected, onClick }: Props) => {\n  return (\n    <Container selected={selected} onClick={onClick}>\n      <Label>{project.name}</Label>\n      <LinkContainer\n        style={{ textDecoration: \"none\" }}\n        href={project.url}\n        target=\"_blank\"\n      >\n        <Link>Visit</Link>\n        <Icon src=\"/external-link.svg\" />\n      </LinkContainer>\n    </Container>\n  );\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Project } from \"../../App\";\nimport ListItem from \"./ListItem\";\n\nconst Container = styled.div`\n  flex: 0 0 25%;\n  margin: 10vh 0;\n\n  @media screen and (max-width: 930px) {\n    margin: 0 0 10vh 0;\n    flex: 1;\n    width: 90vw;\n    max-width: 540px;\n  }\n`;\n\ninterface Props {\n  projects: Project[];\n  curProject: number;\n  setCurProject: (project: number) => void;\n}\n\nconst ProjectList = ({ projects, curProject, setCurProject }: Props) => {\n  return (\n    <Container>\n      {projects.map((project, index) => (\n        <ListItem\n          key={`project-${index}`}\n          onClick={() => setCurProject(index)}\n          project={project}\n          selected={index === curProject}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default ProjectList;\n","import React, { useState } from \"react\";\nimport { Header, Laptop, ProjectList } from \"./components\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n\n    @media (prefers-color-scheme: dark) {\n      background: black;\n\n      h1,h2,h3,h4,h5,h6 {\n        color: white;\n      }\n\n      a {\n        color: dodgerblue;\n      }\n    }\n  }\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  justify-content: center;\n\n  @media screen and (max-width: 930px) {\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n  }\n`;\n\nexport interface Project {\n  name: string;\n  url: string;\n  videoSrc: string;\n}\n\nconst projects: Project[] = [\n  {\n    name: \"Apple Music.js\",\n    url: \"http://tannerv.com/music\",\n    videoSrc: \"/AppleMusicJS.mp4\"\n  },\n  {\n    name: \"Playce\",\n    url: \"http://tannerv.com/playce\",\n    videoSrc: \"/Playce.mp4\"\n  },\n  {\n    name: \"Sprinter\",\n    url: \"http://tannerv.com/Sprinter\",\n    videoSrc: \"/Sprinter.mp4\"\n  },\n  {\n    name: \"iFixit Product Reviews\",\n    url: \"https://www.ifixit.com/Store/iPhone/iPhone-7-Replacement-Battery/IF332-005?o=11\",\n    videoSrc: \"/Reviews.mp4\"\n  },\n];\n\nconst App: React.FC = () => {\n  const [curProject, setCurProject] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <GlobalStyles />\n      <Header />\n      <ContentContainer>\n        <Laptop\n          projects={projects}\n          curProject={curProject}\n          setCurProject={setCurProject}\n        />\n        <ProjectList\n          projects={projects}\n          curProject={curProject}\n          setCurProject={setCurProject}\n        />\n      </ContentContainer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}